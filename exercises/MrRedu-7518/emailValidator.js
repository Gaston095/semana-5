let regExp = /^\w{3,16}(\.\w{2,12})?@([a-z]{2,12})((\.|\+)[a-z]{2,6})?$/

const emails =  [
                'john.doe@example.com',               // 游녨游낕 S칤
                'jane_doe+shopping@example.org',      // 游녩游낕 No
                'alice.smith+work@example.co.uk',     // 游녩游낕 No
                'charlie.brown+newsletter@example.io',// 游녩游낕 No
                'emily.watson+notes@example.net',     // 游녩游낕 No
                'abc5464.@kari.aks',                  // 游녩游낕 No
                'abc5464.sss@kari.aks',               // 游녨游낕 S칤
                'pepito_jose.1832@abc+ab',            // 游녨游낕 S칤
                'aok_jose.1832@AAAA+cv',              // 游녩游낕 No
                'normalName_2035@mycity.city',        // 游녨游낕 S칤
                'anormalName-666@DREAM.23',           // 游녩游낕 No
                'kira_08@abc.io',                     // 游녨游낕 S칤
                ]

const emailValidator = () => {
    emails.map((email)=>{
        if(regExp.test(email)){
            console.log(`${email} 游녨游낕`)
        } else {
            console.log(`${email} 游녩游낕`)
        }
    })
}
emailValidator()

/*

# RegExp explicado
/^\w{3,12}(\.\w{2,12})?@([a-z]{2,12})((\.|\+)[a-z]{2,6})?$/


## Partes divididas:

- - -   /^\w{3,16}   - - -
- Expresi칩n necesaria
- Comenzar con caracteres alfanum칠ricos, con un rango m칤nimo de 3, hasta 16
// aBc_12

- - -   (.\w{2,12})?   - - -
- Expresi칩n que podr칤a existir o no `?`
- Debe comenzar con `.`
- Contin칰a con caracteres alfan칰meros, de longitud m칤nima de 2 a 12
// aBc_12.j5

- - -   @   - - -
- El s칤mbolo del arroba es necesario
// aBc_12.j5@

- - -   ([a-z]{2,12})   - - -
- Expresi칩n necesaria
- Letras en min칰scula, con longitud m칤nima de 2 a 12
// aBc_12.j5@kl

- - -   ((.|+)[a-z]{2,6})?$/   - - -
- Expresi칩n que podr칤a existir o no `?`
- Debe comenzar con un `.` o con un `+`
- Le siguen letras min칰sculas, con longitud m칤nma de 2 a 6
// aBc_12.j5@kl
// aBc_12.j5@kl.xk
// aBc_12.j5@kl+xk

*/